@{
    Layout = "~/Views/Shared/TourComboLayout.cshtml";
}

@model IEnumerable<DaLatTour.Models.TourComboModel>

@{
    ViewBag.Title = "Danh sách Combo Tour";  // Tiêu đề trang
}

<div class="container-fluid tour-combo" style="padding: 20px; background-color: #f8f9fa;">
    <div class="row justify-content-center">
        <div class="col-md-10">
            @foreach (var combo in Model)
            {
                <div class="tour-card mb-4">
                    <div class="row align-items-center">
                        <div class="col-md-4 d-flex justify-content-center">
                            <img src="~/Asset/img/@combo.img_url" alt="@combo.combo_name" class="img-fluid" />
                        </div>
                        <div class="col-md-6">
                            <h5>@combo.combo_name</h5>
                            <p>@Html.Raw(combo.description.Replace(Environment.NewLine, "<br /><br />"))</p>

                            <div class="text-right mt-3">
                                <a href="@Url.Action("TourComboDetail", "TourCombo", new { comboid = combo.combo_id })" class="btn btn-primary">Xem Combo</a>
                            </div>
                        </div>
                        <div class="col-md-2 text-md-right">
                            <p><strong class="price">Giá: </strong> @combo.price.ToString("C", new System.Globalization.CultureInfo("vi-VN")).Replace("₫", "VND")</p>
                            <div class="hotel-restaurant">
                                <p><strong>Khách Sạn:</strong> @combo.hotel_name</p>
                                <p><strong>Nhà Hàng:</strong> @combo.restaurant_name</p>
                            </div>
                            <p><strong>Dịch Vụ:</strong></p>
                            <ul>
                                @foreach (var service in combo.services)
                                {
                                    <li>- @service.service_name</li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
                <!-- Phân trang -->
        <div class="d-flex justify-content-center mt-4">
            @{
                int totalTours = ViewBag.TotalTours != null ? (int)ViewBag.TotalTours : 0; // Gán giá trị 0 nếu null
                int totalPages = (int)Math.Ceiling((double)totalTours / 6); // Tính tổng số trang
                int currentPage = ViewBag.CurrentPage != null ? (int)ViewBag.CurrentPage : 1; // Gán giá trị 1 nếu null
            }


            <!-- Nút trang đầu -->
            <a href="@Url.Action("TourCombo", new { page = 1 })" class="btn btn-outline-primary mx-1" @(currentPage == 1 ? "disabled" : "")>&lt;&lt;</a>

            <!-- Nút trang trước -->
            <a href="@Url.Action("TourCombo", new { page = currentPage - 1 })" class="btn btn-outline-primary mx-1" @(currentPage == 1 ? "disabled" : "")>&lt;</a>

            @if (totalPages <= 6) // Nếu tổng số trang nhỏ hơn hoặc bằng 6
            {
                for (int i = 1; i <= totalPages; i++)
                {
                    if (i == currentPage)
                    {
                        <span class="btn btn-primary mx-1">@i</span> <!-- Trang hiện tại -->
                    }
                    else
                    {
                        <a href="@Url.Action("TourCombo", new { page = i })" class="btn btn-outline-primary mx-1">@i</a> <!-- Liên kết đến trang khác -->
                    }
                }
            }
            else // Nếu tổng số trang lớn hơn 6
            {
                if (currentPage > 3)
                {
                    // Hiển thị trang 1
                    <a href="@Url.Action("TourCombo", new { page = 1 })" class="btn btn-outline-primary mx-1">1</a>
                    if (currentPage > 4)
                    {
                        <span class="btn btn-outline-secondary mx-1">...</span> <!-- Dấu ba chấm -->
                    }
                }

                // Hiển thị các trang xung quanh trang hiện tại
                int startPage = Math.Max(2, currentPage - 1);
                int endPage = Math.Min(totalPages - 1, currentPage + 1);

                for (int i = startPage; i <= endPage; i++)
                {
                    if (i == currentPage)
                    {
                        <span class="btn btn-primary mx-1">@i</span> <!-- Trang hiện tại -->
                    }
                    else
                    {
                        <a href="@Url.Action("TourCombo", new { page = i })" class="btn btn-outline-primary mx-1">@i</a> <!-- Liên kết đến trang khác -->
                    }
                }

                if (currentPage < totalPages - 3)
                {
                    if (currentPage < totalPages - 2)
                    {
                        <span class="btn btn-outline-secondary mx-1">...</span> <!-- Dấu ba chấm -->
                    }
                    // Hiển thị trang cuối
                    <a href="@Url.Action("TourCombo", new { page = totalPages })" class="btn btn-outline-primary mx-1">@totalPages</a>
                }
            }

            <!-- Nút trang tiếp theo -->
            <a href="@Url.Action("TourCombo", new { page = currentPage + 1 })" class="btn btn-outline-primary mx-1" @(currentPage == totalPages ? "disabled" : "")>&gt;</a>

            <!-- Nút trang cuối -->
            <a href="@Url.Action("TourCombo", new { page = totalPages })" class="btn btn-outline-primary mx-1" @(currentPage == totalPages ? "disabled" : "")>&gt;&gt;</a>
        </div>
    </div>
</div>
<link href="~/Asset/css/ComboTour.css" rel="stylesheet" />
