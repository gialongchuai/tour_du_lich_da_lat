#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DaLatTour
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_TourDuLich")]
	public partial class TourDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTourComboDeparture(TourComboDeparture instance);
    partial void UpdateTourComboDeparture(TourComboDeparture instance);
    partial void DeleteTourComboDeparture(TourComboDeparture instance);
    partial void InsertChat_Support(Chat_Support instance);
    partial void UpdateChat_Support(Chat_Support instance);
    partial void DeleteChat_Support(Chat_Support instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertHotel(Hotel instance);
    partial void UpdateHotel(Hotel instance);
    partial void DeleteHotel(Hotel instance);
    partial void InsertImgList(ImgList instance);
    partial void UpdateImgList(ImgList instance);
    partial void DeleteImgList(ImgList instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoice_Detail(Invoice_Detail instance);
    partial void UpdateInvoice_Detail(Invoice_Detail instance);
    partial void DeleteInvoice_Detail(Invoice_Detail instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertRestaurant(Restaurant instance);
    partial void UpdateRestaurant(Restaurant instance);
    partial void DeleteRestaurant(Restaurant instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertTour_Detail(Tour_Detail instance);
    partial void UpdateTour_Detail(Tour_Detail instance);
    partial void DeleteTour_Detail(Tour_Detail instance);
    partial void InsertTour_Service(Tour_Service instance);
    partial void UpdateTour_Service(Tour_Service instance);
    partial void DeleteTour_Service(Tour_Service instance);
    partial void InsertTourCombo(TourCombo instance);
    partial void UpdateTourCombo(TourCombo instance);
    partial void DeleteTourCombo(TourCombo instance);
    partial void InsertTourCombo_Service(TourCombo_Service instance);
    partial void UpdateTourCombo_Service(TourCombo_Service instance);
    partial void DeleteTourCombo_Service(TourCombo_Service instance);
    partial void InsertWishlistService(WishlistService instance);
    partial void UpdateWishlistService(WishlistService instance);
    partial void DeleteWishlistService(WishlistService instance);
    partial void InsertTourWishlist(TourWishlist instance);
    partial void UpdateTourWishlist(TourWishlist instance);
    partial void DeleteTourWishlist(TourWishlist instance);
    partial void InsertWishlistDeparture(WishlistDeparture instance);
    partial void UpdateWishlistDeparture(WishlistDeparture instance);
    partial void DeleteWishlistDeparture(WishlistDeparture instance);
    partial void InsertBooking(Booking instance);
    partial void UpdateBooking(Booking instance);
    partial void DeleteBooking(Booking instance);
    partial void InsertTour_Review(Tour_Review instance);
    partial void UpdateTour_Review(Tour_Review instance);
    partial void DeleteTour_Review(Tour_Review instance);
    #endregion
		
		public TourDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TourDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TourComboDeparture> TourComboDepartures
		{
			get
			{
				return this.GetTable<TourComboDeparture>();
			}
		}
		
		public System.Data.Linq.Table<Chat_Support> Chat_Supports
		{
			get
			{
				return this.GetTable<Chat_Support>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Hotel> Hotels
		{
			get
			{
				return this.GetTable<Hotel>();
			}
		}
		
		public System.Data.Linq.Table<ImgList> ImgLists
		{
			get
			{
				return this.GetTable<ImgList>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_Detail> Invoice_Details
		{
			get
			{
				return this.GetTable<Invoice_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotions
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<Restaurant> Restaurants
		{
			get
			{
				return this.GetTable<Restaurant>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<Tour_Detail> Tour_Details
		{
			get
			{
				return this.GetTable<Tour_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Tour_Service> Tour_Services
		{
			get
			{
				return this.GetTable<Tour_Service>();
			}
		}
		
		public System.Data.Linq.Table<TourCombo> TourCombos
		{
			get
			{
				return this.GetTable<TourCombo>();
			}
		}
		
		public System.Data.Linq.Table<TourCombo_Service> TourCombo_Services
		{
			get
			{
				return this.GetTable<TourCombo_Service>();
			}
		}
		
		public System.Data.Linq.Table<WishlistService> WishlistServices
		{
			get
			{
				return this.GetTable<WishlistService>();
			}
		}
		
		public System.Data.Linq.Table<TourWishlist> TourWishlists
		{
			get
			{
				return this.GetTable<TourWishlist>();
			}
		}
		
		public System.Data.Linq.Table<WishlistDeparture> WishlistDepartures
		{
			get
			{
				return this.GetTable<WishlistDeparture>();
			}
		}
		
		public System.Data.Linq.Table<Booking> Bookings
		{
			get
			{
				return this.GetTable<Booking>();
			}
		}
		
		public System.Data.Linq.Table<Tour_Review> Tour_Reviews
		{
			get
			{
				return this.GetTable<Tour_Review>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TourComboDeparture")]
	public partial class TourComboDeparture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _departure_id;
		
		private int _combo_id;
		
		private System.DateTime _departure_date;
		
		private decimal _price;
		
		private int _available_slots;
		
		private EntityRef<TourCombo> _TourCombo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondeparture_idChanging(int value);
    partial void Ondeparture_idChanged();
    partial void Oncombo_idChanging(int value);
    partial void Oncombo_idChanged();
    partial void Ondeparture_dateChanging(System.DateTime value);
    partial void Ondeparture_dateChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void Onavailable_slotsChanging(int value);
    partial void Onavailable_slotsChanged();
    #endregion
		
		public TourComboDeparture()
		{
			this._TourCombo = default(EntityRef<TourCombo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int departure_id
		{
			get
			{
				return this._departure_id;
			}
			set
			{
				if ((this._departure_id != value))
				{
					this.Ondeparture_idChanging(value);
					this.SendPropertyChanging();
					this._departure_id = value;
					this.SendPropertyChanged("departure_id");
					this.Ondeparture_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_combo_id", DbType="Int NOT NULL")]
		public int combo_id
		{
			get
			{
				return this._combo_id;
			}
			set
			{
				if ((this._combo_id != value))
				{
					if (this._TourCombo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncombo_idChanging(value);
					this.SendPropertyChanging();
					this._combo_id = value;
					this.SendPropertyChanged("combo_id");
					this.Oncombo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_date", DbType="Date NOT NULL")]
		public System.DateTime departure_date
		{
			get
			{
				return this._departure_date;
			}
			set
			{
				if ((this._departure_date != value))
				{
					this.Ondeparture_dateChanging(value);
					this.SendPropertyChanging();
					this._departure_date = value;
					this.SendPropertyChanged("departure_date");
					this.Ondeparture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available_slots", DbType="Int NOT NULL")]
		public int available_slots
		{
			get
			{
				return this._available_slots;
			}
			set
			{
				if ((this._available_slots != value))
				{
					this.Onavailable_slotsChanging(value);
					this.SendPropertyChanging();
					this._available_slots = value;
					this.SendPropertyChanged("available_slots");
					this.Onavailable_slotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_TourComboDeparture", Storage="_TourCombo", ThisKey="combo_id", OtherKey="combo_id", IsForeignKey=true)]
		public TourCombo TourCombo
		{
			get
			{
				return this._TourCombo.Entity;
			}
			set
			{
				TourCombo previousValue = this._TourCombo.Entity;
				if (((previousValue != value) 
							|| (this._TourCombo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourCombo.Entity = null;
						previousValue.TourComboDepartures.Remove(this);
					}
					this._TourCombo.Entity = value;
					if ((value != null))
					{
						value.TourComboDepartures.Add(this);
						this._combo_id = value.combo_id;
					}
					else
					{
						this._combo_id = default(int);
					}
					this.SendPropertyChanged("TourCombo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chat_Support")]
	public partial class Chat_Support : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _chat_id;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<int> _staff_id;
		
		private string _message;
		
		private System.Nullable<System.DateTime> _message_date;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onchat_idChanging(int value);
    partial void Onchat_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void Onstaff_idChanging(System.Nullable<int> value);
    partial void Onstaff_idChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void Onmessage_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmessage_dateChanged();
    #endregion
		
		public Chat_Support()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chat_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int chat_id
		{
			get
			{
				return this._chat_id;
			}
			set
			{
				if ((this._chat_id != value))
				{
					this.Onchat_idChanging(value);
					this.SendPropertyChanging();
					this._chat_id = value;
					this.SendPropertyChanged("chat_id");
					this.Onchat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="Int")]
		public System.Nullable<int> staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> message_date
		{
			get
			{
				return this._message_date;
			}
			set
			{
				if ((this._message_date != value))
				{
					this.Onmessage_dateChanging(value);
					this.SendPropertyChanging();
					this._message_date = value;
					this.SendPropertyChanged("message_date");
					this.Onmessage_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Chat_Support", Storage="_Customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Chat_Supports.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Chat_Supports.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Chat_Support", Storage="_Staff", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Chat_Supports.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Chat_Supports.Add(this);
						this._staff_id = value.staff_id;
					}
					else
					{
						this._staff_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private string _username;
		
		private string _password;
		
		private string _address;
		
		private System.Nullable<System.DateTime> _dob;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntitySet<Chat_Support> _Chat_Supports;
		
		private EntitySet<Booking> _Bookings;
		
		private EntitySet<Tour_Review> _Tour_Reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public Customer()
		{
			this._Chat_Supports = new EntitySet<Chat_Support>(new Action<Chat_Support>(this.attach_Chat_Supports), new Action<Chat_Support>(this.detach_Chat_Supports));
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			this._Tour_Reviews = new EntitySet<Tour_Review>(new Action<Tour_Review>(this.attach_Tour_Reviews), new Action<Tour_Review>(this.detach_Tour_Reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(255)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Chat_Support", Storage="_Chat_Supports", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<Chat_Support> Chat_Supports
		{
			get
			{
				return this._Chat_Supports;
			}
			set
			{
				this._Chat_Supports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Booking", Storage="_Bookings", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Tour_Review", Storage="_Tour_Reviews", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<Tour_Review> Tour_Reviews
		{
			get
			{
				return this._Tour_Reviews;
			}
			set
			{
				this._Tour_Reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chat_Supports(Chat_Support entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Chat_Supports(Chat_Support entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Tour_Reviews(Tour_Review entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Tour_Reviews(Tour_Review entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hotel")]
	public partial class Hotel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hotel_id;
		
		private string _hotel_name;
		
		private decimal _price_per_night;
		
		private string _location;
		
		private string _description;
		
		private EntitySet<TourCombo> _TourCombos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhotel_idChanging(int value);
    partial void Onhotel_idChanged();
    partial void Onhotel_nameChanging(string value);
    partial void Onhotel_nameChanged();
    partial void Onprice_per_nightChanging(decimal value);
    partial void Onprice_per_nightChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Hotel()
		{
			this._TourCombos = new EntitySet<TourCombo>(new Action<TourCombo>(this.attach_TourCombos), new Action<TourCombo>(this.detach_TourCombos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotel_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int hotel_id
		{
			get
			{
				return this._hotel_id;
			}
			set
			{
				if ((this._hotel_id != value))
				{
					this.Onhotel_idChanging(value);
					this.SendPropertyChanging();
					this._hotel_id = value;
					this.SendPropertyChanged("hotel_id");
					this.Onhotel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotel_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string hotel_name
		{
			get
			{
				return this._hotel_name;
			}
			set
			{
				if ((this._hotel_name != value))
				{
					this.Onhotel_nameChanging(value);
					this.SendPropertyChanging();
					this._hotel_name = value;
					this.SendPropertyChanged("hotel_name");
					this.Onhotel_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_per_night", DbType="Decimal(10,2) NOT NULL")]
		public decimal price_per_night
		{
			get
			{
				return this._price_per_night;
			}
			set
			{
				if ((this._price_per_night != value))
				{
					this.Onprice_per_nightChanging(value);
					this.SendPropertyChanging();
					this._price_per_night = value;
					this.SendPropertyChanged("price_per_night");
					this.Onprice_per_nightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(255)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_TourCombo", Storage="_TourCombos", ThisKey="hotel_id", OtherKey="hotel_id")]
		public EntitySet<TourCombo> TourCombos
		{
			get
			{
				return this._TourCombos;
			}
			set
			{
				this._TourCombos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TourCombos(TourCombo entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_TourCombos(TourCombo entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImgList")]
	public partial class ImgList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _img_id;
		
		private System.Nullable<int> _combo_id;
		
		private string _img_url;
		
		private EntityRef<TourCombo> _TourCombo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onimg_idChanging(int value);
    partial void Onimg_idChanged();
    partial void Oncombo_idChanging(System.Nullable<int> value);
    partial void Oncombo_idChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    #endregion
		
		public ImgList()
		{
			this._TourCombo = default(EntityRef<TourCombo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int img_id
		{
			get
			{
				return this._img_id;
			}
			set
			{
				if ((this._img_id != value))
				{
					this.Onimg_idChanging(value);
					this.SendPropertyChanging();
					this._img_id = value;
					this.SendPropertyChanged("img_id");
					this.Onimg_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_combo_id", DbType="Int")]
		public System.Nullable<int> combo_id
		{
			get
			{
				return this._combo_id;
			}
			set
			{
				if ((this._combo_id != value))
				{
					if (this._TourCombo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncombo_idChanging(value);
					this.SendPropertyChanging();
					this._combo_id = value;
					this.SendPropertyChanged("combo_id");
					this.Oncombo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string img_url
		{
			get
			{
				return this._img_url;
			}
			set
			{
				if ((this._img_url != value))
				{
					this.Onimg_urlChanging(value);
					this.SendPropertyChanging();
					this._img_url = value;
					this.SendPropertyChanged("img_url");
					this.Onimg_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_ImgList", Storage="_TourCombo", ThisKey="combo_id", OtherKey="combo_id", IsForeignKey=true)]
		public TourCombo TourCombo
		{
			get
			{
				return this._TourCombo.Entity;
			}
			set
			{
				TourCombo previousValue = this._TourCombo.Entity;
				if (((previousValue != value) 
							|| (this._TourCombo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourCombo.Entity = null;
						previousValue.ImgLists.Remove(this);
					}
					this._TourCombo.Entity = value;
					if ((value != null))
					{
						value.ImgLists.Add(this);
						this._combo_id = value.combo_id;
					}
					else
					{
						this._combo_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("TourCombo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _invoice_id;
		
		private System.Nullable<int> _booking_id;
		
		private System.Nullable<System.DateTime> _invoice_date;
		
		private decimal _total_amount;
		
		private string _payment_method;
		
		private string _payment_status;
		
		private EntitySet<Invoice_Detail> _Invoice_Details;
		
		private EntityRef<Booking> _Booking;
		
		private EntityRef<Booking> _Booking1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oninvoice_idChanging(int value);
    partial void Oninvoice_idChanged();
    partial void Onbooking_idChanging(System.Nullable<int> value);
    partial void Onbooking_idChanged();
    partial void Oninvoice_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oninvoice_dateChanged();
    partial void Ontotal_amountChanging(decimal value);
    partial void Ontotal_amountChanged();
    partial void Onpayment_methodChanging(string value);
    partial void Onpayment_methodChanged();
    partial void Onpayment_statusChanging(string value);
    partial void Onpayment_statusChanged();
    #endregion
		
		public Invoice()
		{
			this._Invoice_Details = new EntitySet<Invoice_Detail>(new Action<Invoice_Detail>(this.attach_Invoice_Details), new Action<Invoice_Detail>(this.detach_Invoice_Details));
			this._Booking = default(EntityRef<Booking>);
			this._Booking1 = default(EntityRef<Booking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_id", DbType="Int")]
		public System.Nullable<int> booking_id
		{
			get
			{
				return this._booking_id;
			}
			set
			{
				if ((this._booking_id != value))
				{
					if ((this._Booking.HasLoadedOrAssignedValue || this._Booking1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbooking_idChanging(value);
					this.SendPropertyChanging();
					this._booking_id = value;
					this.SendPropertyChanged("booking_id");
					this.Onbooking_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> invoice_date
		{
			get
			{
				return this._invoice_date;
			}
			set
			{
				if ((this._invoice_date != value))
				{
					this.Oninvoice_dateChanging(value);
					this.SendPropertyChanging();
					this._invoice_date = value;
					this.SendPropertyChanged("invoice_date");
					this.Oninvoice_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string payment_method
		{
			get
			{
				return this._payment_method;
			}
			set
			{
				if ((this._payment_method != value))
				{
					this.Onpayment_methodChanging(value);
					this.SendPropertyChanging();
					this._payment_method = value;
					this.SendPropertyChanged("payment_method");
					this.Onpayment_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_status", DbType="VarChar(50)")]
		public string payment_status
		{
			get
			{
				return this._payment_status;
			}
			set
			{
				if ((this._payment_status != value))
				{
					this.Onpayment_statusChanging(value);
					this.SendPropertyChanging();
					this._payment_status = value;
					this.SendPropertyChanged("payment_status");
					this.Onpayment_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice_Detail", Storage="_Invoice_Details", ThisKey="invoice_id", OtherKey="invoice_id")]
		public EntitySet<Invoice_Detail> Invoice_Details
		{
			get
			{
				return this._Invoice_Details;
			}
			set
			{
				this._Invoice_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Invoice", Storage="_Booking", ThisKey="booking_id", OtherKey="booking_id", IsForeignKey=true)]
		public Booking Booking
		{
			get
			{
				return this._Booking.Entity;
			}
			set
			{
				Booking previousValue = this._Booking.Entity;
				if (((previousValue != value) 
							|| (this._Booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Booking.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Booking.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._booking_id = value.booking_id;
					}
					else
					{
						this._booking_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Booking");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Invoice1", Storage="_Booking1", ThisKey="booking_id", OtherKey="booking_id", IsForeignKey=true)]
		public Booking Booking1
		{
			get
			{
				return this._Booking1.Entity;
			}
			set
			{
				Booking previousValue = this._Booking1.Entity;
				if (((previousValue != value) 
							|| (this._Booking1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Booking1.Entity = null;
						previousValue.Invoices1.Remove(this);
					}
					this._Booking1.Entity = value;
					if ((value != null))
					{
						value.Invoices1.Add(this);
						this._booking_id = value.booking_id;
					}
					else
					{
						this._booking_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Booking1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice_Details(Invoice_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Invoice_Details(Invoice_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice_Detail")]
	public partial class Invoice_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _invoice_detail_id;
		
		private System.Nullable<int> _invoice_id;
		
		private string _description;
		
		private decimal _amount;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oninvoice_detail_idChanging(int value);
    partial void Oninvoice_detail_idChanged();
    partial void Oninvoice_idChanging(System.Nullable<int> value);
    partial void Oninvoice_idChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    #endregion
		
		public Invoice_Detail()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_detail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int invoice_detail_id
		{
			get
			{
				return this._invoice_detail_id;
			}
			set
			{
				if ((this._invoice_detail_id != value))
				{
					this.Oninvoice_detail_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_detail_id = value;
					this.SendPropertyChanged("invoice_detail_id");
					this.Oninvoice_detail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="Int")]
		public System.Nullable<int> invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice_Detail", Storage="_Invoice", ThisKey="invoice_id", OtherKey="invoice_id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Invoice_Details.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Invoice_Details.Add(this);
						this._invoice_id = value.invoice_id;
					}
					else
					{
						this._invoice_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotion")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _promotion_id;
		
		private string _description;
		
		private decimal _discount_percentage;
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpromotion_idChanging(int value);
    partial void Onpromotion_idChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ondiscount_percentageChanging(decimal value);
    partial void Ondiscount_percentageChanged();
    partial void Onstart_dateChanging(System.DateTime value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.DateTime value);
    partial void Onend_dateChanged();
    #endregion
		
		public Promotion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promotion_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int promotion_id
		{
			get
			{
				return this._promotion_id;
			}
			set
			{
				if ((this._promotion_id != value))
				{
					this.Onpromotion_idChanging(value);
					this.SendPropertyChanging();
					this._promotion_id = value;
					this.SendPropertyChanged("promotion_id");
					this.Onpromotion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_percentage", DbType="Decimal(5,2) NOT NULL")]
		public decimal discount_percentage
		{
			get
			{
				return this._discount_percentage;
			}
			set
			{
				if ((this._discount_percentage != value))
				{
					this.Ondiscount_percentageChanging(value);
					this.SendPropertyChanging();
					this._discount_percentage = value;
					this.SendPropertyChanged("discount_percentage");
					this.Ondiscount_percentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date NOT NULL")]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date NOT NULL")]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Restaurant")]
	public partial class Restaurant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _restaurant_id;
		
		private string _restaurant_name;
		
		private string _location;
		
		private string _price_range;
		
		private string _description;
		
		private EntitySet<TourCombo> _TourCombos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrestaurant_idChanging(int value);
    partial void Onrestaurant_idChanged();
    partial void Onrestaurant_nameChanging(string value);
    partial void Onrestaurant_nameChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void Onprice_rangeChanging(string value);
    partial void Onprice_rangeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Restaurant()
		{
			this._TourCombos = new EntitySet<TourCombo>(new Action<TourCombo>(this.attach_TourCombos), new Action<TourCombo>(this.detach_TourCombos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_restaurant_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int restaurant_id
		{
			get
			{
				return this._restaurant_id;
			}
			set
			{
				if ((this._restaurant_id != value))
				{
					this.Onrestaurant_idChanging(value);
					this.SendPropertyChanging();
					this._restaurant_id = value;
					this.SendPropertyChanged("restaurant_id");
					this.Onrestaurant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_restaurant_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string restaurant_name
		{
			get
			{
				return this._restaurant_name;
			}
			set
			{
				if ((this._restaurant_name != value))
				{
					this.Onrestaurant_nameChanging(value);
					this.SendPropertyChanging();
					this._restaurant_name = value;
					this.SendPropertyChanged("restaurant_name");
					this.Onrestaurant_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(255)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_range", DbType="VarChar(50)")]
		public string price_range
		{
			get
			{
				return this._price_range;
			}
			set
			{
				if ((this._price_range != value))
				{
					this.Onprice_rangeChanging(value);
					this.SendPropertyChanging();
					this._price_range = value;
					this.SendPropertyChanged("price_range");
					this.Onprice_rangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Restaurant_TourCombo", Storage="_TourCombos", ThisKey="restaurant_id", OtherKey="restaurant_id")]
		public EntitySet<TourCombo> TourCombos
		{
			get
			{
				return this._TourCombos;
			}
			set
			{
				this._TourCombos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TourCombos(TourCombo entity)
		{
			this.SendPropertyChanging();
			entity.Restaurant = this;
		}
		
		private void detach_TourCombos(TourCombo entity)
		{
			this.SendPropertyChanging();
			entity.Restaurant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _staff_id;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private string _role;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntitySet<Chat_Support> _Chat_Supports;
		
		private EntitySet<Booking> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public Staff()
		{
			this._Chat_Supports = new EntitySet<Chat_Support>(new Action<Chat_Support>(this.attach_Chat_Supports), new Action<Chat_Support>(this.detach_Chat_Supports));
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Chat_Support", Storage="_Chat_Supports", ThisKey="staff_id", OtherKey="staff_id")]
		public EntitySet<Chat_Support> Chat_Supports
		{
			get
			{
				return this._Chat_Supports;
			}
			set
			{
				this._Chat_Supports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Booking", Storage="_Bookings", ThisKey="staff_id", OtherKey="staff_id")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chat_Supports(Chat_Support entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Chat_Supports(Chat_Support entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tour_id;
		
		private string _tour_name;
		
		private string _description;
		
		private string _tour_image;
		
		private decimal _price;
		
		private int _duration;
		
		private string _travelby;
		
		private int _available_slots;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private System.Nullable<double> _average_rating;
		
		private EntitySet<Tour_Detail> _Tour_Details;
		
		private EntitySet<Booking> _Bookings;
		
		private EntitySet<Booking> _Bookings1;
		
		private EntitySet<Tour_Review> _Tour_Reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontour_idChanging(int value);
    partial void Ontour_idChanged();
    partial void Ontour_nameChanging(string value);
    partial void Ontour_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ontour_imageChanging(string value);
    partial void Ontour_imageChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OndurationChanging(int value);
    partial void OndurationChanged();
    partial void OntravelbyChanging(string value);
    partial void OntravelbyChanged();
    partial void Onavailable_slotsChanging(int value);
    partial void Onavailable_slotsChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Onaverage_ratingChanging(System.Nullable<double> value);
    partial void Onaverage_ratingChanged();
    #endregion
		
		public Tour()
		{
			this._Tour_Details = new EntitySet<Tour_Detail>(new Action<Tour_Detail>(this.attach_Tour_Details), new Action<Tour_Detail>(this.detach_Tour_Details));
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			this._Bookings1 = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings1), new Action<Booking>(this.detach_Bookings1));
			this._Tour_Reviews = new EntitySet<Tour_Review>(new Action<Tour_Review>(this.attach_Tour_Reviews), new Action<Tour_Review>(this.detach_Tour_Reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tour_id
		{
			get
			{
				return this._tour_id;
			}
			set
			{
				if ((this._tour_id != value))
				{
					this.Ontour_idChanging(value);
					this.SendPropertyChanging();
					this._tour_id = value;
					this.SendPropertyChanged("tour_id");
					this.Ontour_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tour_name
		{
			get
			{
				return this._tour_name;
			}
			set
			{
				if ((this._tour_name != value))
				{
					this.Ontour_nameChanging(value);
					this.SendPropertyChanging();
					this._tour_name = value;
					this.SendPropertyChanged("tour_name");
					this.Ontour_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_image", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tour_image
		{
			get
			{
				return this._tour_image;
			}
			set
			{
				if ((this._tour_image != value))
				{
					this.Ontour_imageChanging(value);
					this.SendPropertyChanging();
					this._tour_image = value;
					this.SendPropertyChanged("tour_image");
					this.Ontour_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,0) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Int NOT NULL")]
		public int duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_travelby", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string travelby
		{
			get
			{
				return this._travelby;
			}
			set
			{
				if ((this._travelby != value))
				{
					this.OntravelbyChanging(value);
					this.SendPropertyChanging();
					this._travelby = value;
					this.SendPropertyChanged("travelby");
					this.OntravelbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available_slots", DbType="Int NOT NULL")]
		public int available_slots
		{
			get
			{
				return this._available_slots;
			}
			set
			{
				if ((this._available_slots != value))
				{
					this.Onavailable_slotsChanging(value);
					this.SendPropertyChanging();
					this._available_slots = value;
					this.SendPropertyChanged("available_slots");
					this.Onavailable_slotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_average_rating", DbType="Float")]
		public System.Nullable<double> average_rating
		{
			get
			{
				return this._average_rating;
			}
			set
			{
				if ((this._average_rating != value))
				{
					this.Onaverage_ratingChanging(value);
					this.SendPropertyChanging();
					this._average_rating = value;
					this.SendPropertyChanged("average_rating");
					this.Onaverage_ratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Tour_Detail", Storage="_Tour_Details", ThisKey="tour_id", OtherKey="tour_id")]
		public EntitySet<Tour_Detail> Tour_Details
		{
			get
			{
				return this._Tour_Details;
			}
			set
			{
				this._Tour_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Booking", Storage="_Bookings", ThisKey="tour_id", OtherKey="tour_id")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Booking1", Storage="_Bookings1", ThisKey="tour_id", OtherKey="tour_id")]
		public EntitySet<Booking> Bookings1
		{
			get
			{
				return this._Bookings1;
			}
			set
			{
				this._Bookings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Tour_Review", Storage="_Tour_Reviews", ThisKey="tour_id", OtherKey="tour_id")]
		public EntitySet<Tour_Review> Tour_Reviews
		{
			get
			{
				return this._Tour_Reviews;
			}
			set
			{
				this._Tour_Reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tour_Details(Tour_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_Tour_Details(Tour_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_Bookings1(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Tour1 = this;
		}
		
		private void detach_Bookings1(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Tour1 = null;
		}
		
		private void attach_Tour_Reviews(Tour_Review entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_Tour_Reviews(Tour_Review entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour_Detail")]
	public partial class Tour_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tour_detail_id;
		
		private System.Nullable<int> _tour_id;
		
		private string _image_url;
		
		private int _num_people;
		
		private System.DateTime _departure_date;
		
		private System.DateTime _return_date;
		
		private string _daily_activities;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontour_detail_idChanging(int value);
    partial void Ontour_detail_idChanged();
    partial void Ontour_idChanging(System.Nullable<int> value);
    partial void Ontour_idChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    partial void Onnum_peopleChanging(int value);
    partial void Onnum_peopleChanged();
    partial void Ondeparture_dateChanging(System.DateTime value);
    partial void Ondeparture_dateChanged();
    partial void Onreturn_dateChanging(System.DateTime value);
    partial void Onreturn_dateChanged();
    partial void Ondaily_activitiesChanging(string value);
    partial void Ondaily_activitiesChanged();
    #endregion
		
		public Tour_Detail()
		{
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_detail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tour_detail_id
		{
			get
			{
				return this._tour_detail_id;
			}
			set
			{
				if ((this._tour_detail_id != value))
				{
					this.Ontour_detail_idChanging(value);
					this.SendPropertyChanging();
					this._tour_detail_id = value;
					this.SendPropertyChanged("tour_detail_id");
					this.Ontour_detail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_id", DbType="Int")]
		public System.Nullable<int> tour_id
		{
			get
			{
				return this._tour_id;
			}
			set
			{
				if ((this._tour_id != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontour_idChanging(value);
					this.SendPropertyChanging();
					this._tour_id = value;
					this.SendPropertyChanged("tour_id");
					this.Ontour_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_url", DbType="VarChar(255)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_people", DbType="Int NOT NULL")]
		public int num_people
		{
			get
			{
				return this._num_people;
			}
			set
			{
				if ((this._num_people != value))
				{
					this.Onnum_peopleChanging(value);
					this.SendPropertyChanging();
					this._num_people = value;
					this.SendPropertyChanged("num_people");
					this.Onnum_peopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_date", DbType="Date NOT NULL")]
		public System.DateTime departure_date
		{
			get
			{
				return this._departure_date;
			}
			set
			{
				if ((this._departure_date != value))
				{
					this.Ondeparture_dateChanging(value);
					this.SendPropertyChanging();
					this._departure_date = value;
					this.SendPropertyChanged("departure_date");
					this.Ondeparture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_date", DbType="Date NOT NULL")]
		public System.DateTime return_date
		{
			get
			{
				return this._return_date;
			}
			set
			{
				if ((this._return_date != value))
				{
					this.Onreturn_dateChanging(value);
					this.SendPropertyChanging();
					this._return_date = value;
					this.SendPropertyChanged("return_date");
					this.Onreturn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_activities", DbType="NVarChar(MAX)")]
		public string daily_activities
		{
			get
			{
				return this._daily_activities;
			}
			set
			{
				if ((this._daily_activities != value))
				{
					this.Ondaily_activitiesChanging(value);
					this.SendPropertyChanging();
					this._daily_activities = value;
					this.SendPropertyChanged("daily_activities");
					this.Ondaily_activitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Tour_Detail", Storage="_Tour", ThisKey="tour_id", OtherKey="tour_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.Tour_Details.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.Tour_Details.Add(this);
						this._tour_id = value.tour_id;
					}
					else
					{
						this._tour_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour_Services")]
	public partial class Tour_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _service_id;
		
		private string _service_name;
		
		private decimal _price;
		
		private string _description;
		
		private EntitySet<TourCombo_Service> _TourCombo_Services;
		
		private EntitySet<WishlistService> _WishlistServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    partial void Onservice_nameChanging(string value);
    partial void Onservice_nameChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Tour_Service()
		{
			this._TourCombo_Services = new EntitySet<TourCombo_Service>(new Action<TourCombo_Service>(this.attach_TourCombo_Services), new Action<TourCombo_Service>(this.detach_TourCombo_Services));
			this._WishlistServices = new EntitySet<WishlistService>(new Action<WishlistService>(this.attach_WishlistServices), new Action<WishlistService>(this.detach_WishlistServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string service_name
		{
			get
			{
				return this._service_name;
			}
			set
			{
				if ((this._service_name != value))
				{
					this.Onservice_nameChanging(value);
					this.SendPropertyChanging();
					this._service_name = value;
					this.SendPropertyChanged("service_name");
					this.Onservice_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Service_TourCombo_Service", Storage="_TourCombo_Services", ThisKey="service_id", OtherKey="service_id")]
		public EntitySet<TourCombo_Service> TourCombo_Services
		{
			get
			{
				return this._TourCombo_Services;
			}
			set
			{
				this._TourCombo_Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Service_WishlistService", Storage="_WishlistServices", ThisKey="service_id", OtherKey="service_id")]
		public EntitySet<WishlistService> WishlistServices
		{
			get
			{
				return this._WishlistServices;
			}
			set
			{
				this._WishlistServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TourCombo_Services(TourCombo_Service entity)
		{
			this.SendPropertyChanging();
			entity.Tour_Service = this;
		}
		
		private void detach_TourCombo_Services(TourCombo_Service entity)
		{
			this.SendPropertyChanging();
			entity.Tour_Service = null;
		}
		
		private void attach_WishlistServices(WishlistService entity)
		{
			this.SendPropertyChanging();
			entity.Tour_Service = this;
		}
		
		private void detach_WishlistServices(WishlistService entity)
		{
			this.SendPropertyChanging();
			entity.Tour_Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TourCombo")]
	public partial class TourCombo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _combo_id;
		
		private string _combo_name;
		
		private string _description;
		
		private decimal _price;
		
		private System.Nullable<int> _hotel_id;
		
		private System.Nullable<int> _restaurant_id;
		
		private string _img_url;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntitySet<TourComboDeparture> _TourComboDepartures;
		
		private EntitySet<ImgList> _ImgLists;
		
		private EntitySet<TourCombo_Service> _TourCombo_Services;
		
		private EntitySet<Booking> _Bookings;
		
		private EntitySet<Tour_Review> _Tour_Reviews;
		
		private EntityRef<Hotel> _Hotel;
		
		private EntityRef<Restaurant> _Restaurant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncombo_idChanging(int value);
    partial void Oncombo_idChanged();
    partial void Oncombo_nameChanging(string value);
    partial void Oncombo_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void Onhotel_idChanging(System.Nullable<int> value);
    partial void Onhotel_idChanged();
    partial void Onrestaurant_idChanging(System.Nullable<int> value);
    partial void Onrestaurant_idChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public TourCombo()
		{
			this._TourComboDepartures = new EntitySet<TourComboDeparture>(new Action<TourComboDeparture>(this.attach_TourComboDepartures), new Action<TourComboDeparture>(this.detach_TourComboDepartures));
			this._ImgLists = new EntitySet<ImgList>(new Action<ImgList>(this.attach_ImgLists), new Action<ImgList>(this.detach_ImgLists));
			this._TourCombo_Services = new EntitySet<TourCombo_Service>(new Action<TourCombo_Service>(this.attach_TourCombo_Services), new Action<TourCombo_Service>(this.detach_TourCombo_Services));
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			this._Tour_Reviews = new EntitySet<Tour_Review>(new Action<Tour_Review>(this.attach_Tour_Reviews), new Action<Tour_Review>(this.detach_Tour_Reviews));
			this._Hotel = default(EntityRef<Hotel>);
			this._Restaurant = default(EntityRef<Restaurant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_combo_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int combo_id
		{
			get
			{
				return this._combo_id;
			}
			set
			{
				if ((this._combo_id != value))
				{
					this.Oncombo_idChanging(value);
					this.SendPropertyChanging();
					this._combo_id = value;
					this.SendPropertyChanged("combo_id");
					this.Oncombo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_combo_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string combo_name
		{
			get
			{
				return this._combo_name;
			}
			set
			{
				if ((this._combo_name != value))
				{
					this.Oncombo_nameChanging(value);
					this.SendPropertyChanging();
					this._combo_name = value;
					this.SendPropertyChanged("combo_name");
					this.Oncombo_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotel_id", DbType="Int")]
		public System.Nullable<int> hotel_id
		{
			get
			{
				return this._hotel_id;
			}
			set
			{
				if ((this._hotel_id != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhotel_idChanging(value);
					this.SendPropertyChanging();
					this._hotel_id = value;
					this.SendPropertyChanged("hotel_id");
					this.Onhotel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_restaurant_id", DbType="Int")]
		public System.Nullable<int> restaurant_id
		{
			get
			{
				return this._restaurant_id;
			}
			set
			{
				if ((this._restaurant_id != value))
				{
					if (this._Restaurant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrestaurant_idChanging(value);
					this.SendPropertyChanging();
					this._restaurant_id = value;
					this.SendPropertyChanged("restaurant_id");
					this.Onrestaurant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="NVarChar(255)")]
		public string img_url
		{
			get
			{
				return this._img_url;
			}
			set
			{
				if ((this._img_url != value))
				{
					this.Onimg_urlChanging(value);
					this.SendPropertyChanging();
					this._img_url = value;
					this.SendPropertyChanged("img_url");
					this.Onimg_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_TourComboDeparture", Storage="_TourComboDepartures", ThisKey="combo_id", OtherKey="combo_id")]
		public EntitySet<TourComboDeparture> TourComboDepartures
		{
			get
			{
				return this._TourComboDepartures;
			}
			set
			{
				this._TourComboDepartures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_ImgList", Storage="_ImgLists", ThisKey="combo_id", OtherKey="combo_id")]
		public EntitySet<ImgList> ImgLists
		{
			get
			{
				return this._ImgLists;
			}
			set
			{
				this._ImgLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_TourCombo_Service", Storage="_TourCombo_Services", ThisKey="combo_id", OtherKey="combo_id")]
		public EntitySet<TourCombo_Service> TourCombo_Services
		{
			get
			{
				return this._TourCombo_Services;
			}
			set
			{
				this._TourCombo_Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_Booking", Storage="_Bookings", ThisKey="combo_id", OtherKey="combo_id")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_Tour_Review", Storage="_Tour_Reviews", ThisKey="combo_id", OtherKey="combo_id")]
		public EntitySet<Tour_Review> Tour_Reviews
		{
			get
			{
				return this._Tour_Reviews;
			}
			set
			{
				this._Tour_Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_TourCombo", Storage="_Hotel", ThisKey="hotel_id", OtherKey="hotel_id", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.TourCombos.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.TourCombos.Add(this);
						this._hotel_id = value.hotel_id;
					}
					else
					{
						this._hotel_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Restaurant_TourCombo", Storage="_Restaurant", ThisKey="restaurant_id", OtherKey="restaurant_id", IsForeignKey=true)]
		public Restaurant Restaurant
		{
			get
			{
				return this._Restaurant.Entity;
			}
			set
			{
				Restaurant previousValue = this._Restaurant.Entity;
				if (((previousValue != value) 
							|| (this._Restaurant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Restaurant.Entity = null;
						previousValue.TourCombos.Remove(this);
					}
					this._Restaurant.Entity = value;
					if ((value != null))
					{
						value.TourCombos.Add(this);
						this._restaurant_id = value.restaurant_id;
					}
					else
					{
						this._restaurant_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Restaurant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TourComboDepartures(TourComboDeparture entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = this;
		}
		
		private void detach_TourComboDepartures(TourComboDeparture entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = null;
		}
		
		private void attach_ImgLists(ImgList entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = this;
		}
		
		private void detach_ImgLists(ImgList entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = null;
		}
		
		private void attach_TourCombo_Services(TourCombo_Service entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = this;
		}
		
		private void detach_TourCombo_Services(TourCombo_Service entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = null;
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = null;
		}
		
		private void attach_Tour_Reviews(Tour_Review entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = this;
		}
		
		private void detach_Tour_Reviews(Tour_Review entity)
		{
			this.SendPropertyChanging();
			entity.TourCombo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TourCombo_Services")]
	public partial class TourCombo_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tourcombo_service_id;
		
		private System.Nullable<int> _combo_id;
		
		private System.Nullable<int> _service_id;
		
		private EntityRef<TourCombo> _TourCombo;
		
		private EntityRef<Tour_Service> _Tour_Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontourcombo_service_idChanging(int value);
    partial void Ontourcombo_service_idChanged();
    partial void Oncombo_idChanging(System.Nullable<int> value);
    partial void Oncombo_idChanged();
    partial void Onservice_idChanging(System.Nullable<int> value);
    partial void Onservice_idChanged();
    #endregion
		
		public TourCombo_Service()
		{
			this._TourCombo = default(EntityRef<TourCombo>);
			this._Tour_Service = default(EntityRef<Tour_Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tourcombo_service_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tourcombo_service_id
		{
			get
			{
				return this._tourcombo_service_id;
			}
			set
			{
				if ((this._tourcombo_service_id != value))
				{
					this.Ontourcombo_service_idChanging(value);
					this.SendPropertyChanging();
					this._tourcombo_service_id = value;
					this.SendPropertyChanged("tourcombo_service_id");
					this.Ontourcombo_service_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_combo_id", DbType="Int")]
		public System.Nullable<int> combo_id
		{
			get
			{
				return this._combo_id;
			}
			set
			{
				if ((this._combo_id != value))
				{
					if (this._TourCombo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncombo_idChanging(value);
					this.SendPropertyChanging();
					this._combo_id = value;
					this.SendPropertyChanged("combo_id");
					this.Oncombo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="Int")]
		public System.Nullable<int> service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._Tour_Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_TourCombo_Service", Storage="_TourCombo", ThisKey="combo_id", OtherKey="combo_id", IsForeignKey=true)]
		public TourCombo TourCombo
		{
			get
			{
				return this._TourCombo.Entity;
			}
			set
			{
				TourCombo previousValue = this._TourCombo.Entity;
				if (((previousValue != value) 
							|| (this._TourCombo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourCombo.Entity = null;
						previousValue.TourCombo_Services.Remove(this);
					}
					this._TourCombo.Entity = value;
					if ((value != null))
					{
						value.TourCombo_Services.Add(this);
						this._combo_id = value.combo_id;
					}
					else
					{
						this._combo_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("TourCombo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Service_TourCombo_Service", Storage="_Tour_Service", ThisKey="service_id", OtherKey="service_id", IsForeignKey=true)]
		public Tour_Service Tour_Service
		{
			get
			{
				return this._Tour_Service.Entity;
			}
			set
			{
				Tour_Service previousValue = this._Tour_Service.Entity;
				if (((previousValue != value) 
							|| (this._Tour_Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour_Service.Entity = null;
						previousValue.TourCombo_Services.Remove(this);
					}
					this._Tour_Service.Entity = value;
					if ((value != null))
					{
						value.TourCombo_Services.Add(this);
						this._service_id = value.service_id;
					}
					else
					{
						this._service_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour_Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WishlistServices")]
	public partial class WishlistService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _wishlist_id;
		
		private int _service_id;
		
		private EntityRef<Tour_Service> _Tour_Service;
		
		private EntityRef<TourWishlist> _TourWishlist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwishlist_idChanging(int value);
    partial void Onwishlist_idChanged();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    #endregion
		
		public WishlistService()
		{
			this._Tour_Service = default(EntityRef<Tour_Service>);
			this._TourWishlist = default(EntityRef<TourWishlist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wishlist_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int wishlist_id
		{
			get
			{
				return this._wishlist_id;
			}
			set
			{
				if ((this._wishlist_id != value))
				{
					if (this._TourWishlist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwishlist_idChanging(value);
					this.SendPropertyChanging();
					this._wishlist_id = value;
					this.SendPropertyChanged("wishlist_id");
					this.Onwishlist_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._Tour_Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Service_WishlistService", Storage="_Tour_Service", ThisKey="service_id", OtherKey="service_id", IsForeignKey=true)]
		public Tour_Service Tour_Service
		{
			get
			{
				return this._Tour_Service.Entity;
			}
			set
			{
				Tour_Service previousValue = this._Tour_Service.Entity;
				if (((previousValue != value) 
							|| (this._Tour_Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour_Service.Entity = null;
						previousValue.WishlistServices.Remove(this);
					}
					this._Tour_Service.Entity = value;
					if ((value != null))
					{
						value.WishlistServices.Add(this);
						this._service_id = value.service_id;
					}
					else
					{
						this._service_id = default(int);
					}
					this.SendPropertyChanged("Tour_Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourWishlist_WishlistService", Storage="_TourWishlist", ThisKey="wishlist_id", OtherKey="wishlist_id", IsForeignKey=true)]
		public TourWishlist TourWishlist
		{
			get
			{
				return this._TourWishlist.Entity;
			}
			set
			{
				TourWishlist previousValue = this._TourWishlist.Entity;
				if (((previousValue != value) 
							|| (this._TourWishlist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourWishlist.Entity = null;
						previousValue.WishlistServices.Remove(this);
					}
					this._TourWishlist.Entity = value;
					if ((value != null))
					{
						value.WishlistServices.Add(this);
						this._wishlist_id = value.wishlist_id;
					}
					else
					{
						this._wishlist_id = default(int);
					}
					this.SendPropertyChanged("TourWishlist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TourWishlist")]
	public partial class TourWishlist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _wishlist_id;
		
		private string _wishlist_name;
		
		private string _description;
		
		private decimal _price;
		
		private System.Nullable<int> _hotel_id;
		
		private System.Nullable<int> _restaurant_id;
		
		private string _img_url;
		
		private System.DateTime _created_at;
		
		private EntitySet<WishlistService> _WishlistServices;
		
		private EntitySet<WishlistDeparture> _WishlistDepartures;
		
		private EntitySet<Booking> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwishlist_idChanging(int value);
    partial void Onwishlist_idChanged();
    partial void Onwishlist_nameChanging(string value);
    partial void Onwishlist_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void Onhotel_idChanging(System.Nullable<int> value);
    partial void Onhotel_idChanged();
    partial void Onrestaurant_idChanging(System.Nullable<int> value);
    partial void Onrestaurant_idChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    #endregion
		
		public TourWishlist()
		{
			this._WishlistServices = new EntitySet<WishlistService>(new Action<WishlistService>(this.attach_WishlistServices), new Action<WishlistService>(this.detach_WishlistServices));
			this._WishlistDepartures = new EntitySet<WishlistDeparture>(new Action<WishlistDeparture>(this.attach_WishlistDepartures), new Action<WishlistDeparture>(this.detach_WishlistDepartures));
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wishlist_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int wishlist_id
		{
			get
			{
				return this._wishlist_id;
			}
			set
			{
				if ((this._wishlist_id != value))
				{
					this.Onwishlist_idChanging(value);
					this.SendPropertyChanging();
					this._wishlist_id = value;
					this.SendPropertyChanged("wishlist_id");
					this.Onwishlist_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wishlist_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string wishlist_name
		{
			get
			{
				return this._wishlist_name;
			}
			set
			{
				if ((this._wishlist_name != value))
				{
					this.Onwishlist_nameChanging(value);
					this.SendPropertyChanging();
					this._wishlist_name = value;
					this.SendPropertyChanged("wishlist_name");
					this.Onwishlist_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotel_id", DbType="Int")]
		public System.Nullable<int> hotel_id
		{
			get
			{
				return this._hotel_id;
			}
			set
			{
				if ((this._hotel_id != value))
				{
					this.Onhotel_idChanging(value);
					this.SendPropertyChanging();
					this._hotel_id = value;
					this.SendPropertyChanged("hotel_id");
					this.Onhotel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_restaurant_id", DbType="Int")]
		public System.Nullable<int> restaurant_id
		{
			get
			{
				return this._restaurant_id;
			}
			set
			{
				if ((this._restaurant_id != value))
				{
					this.Onrestaurant_idChanging(value);
					this.SendPropertyChanging();
					this._restaurant_id = value;
					this.SendPropertyChanged("restaurant_id");
					this.Onrestaurant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="NVarChar(255)")]
		public string img_url
		{
			get
			{
				return this._img_url;
			}
			set
			{
				if ((this._img_url != value))
				{
					this.Onimg_urlChanging(value);
					this.SendPropertyChanging();
					this._img_url = value;
					this.SendPropertyChanged("img_url");
					this.Onimg_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourWishlist_WishlistService", Storage="_WishlistServices", ThisKey="wishlist_id", OtherKey="wishlist_id")]
		public EntitySet<WishlistService> WishlistServices
		{
			get
			{
				return this._WishlistServices;
			}
			set
			{
				this._WishlistServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourWishlist_WishlistDeparture", Storage="_WishlistDepartures", ThisKey="wishlist_id", OtherKey="wishlist_id")]
		public EntitySet<WishlistDeparture> WishlistDepartures
		{
			get
			{
				return this._WishlistDepartures;
			}
			set
			{
				this._WishlistDepartures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourWishlist_Booking", Storage="_Bookings", ThisKey="wishlist_id", OtherKey="wishlist_id")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WishlistServices(WishlistService entity)
		{
			this.SendPropertyChanging();
			entity.TourWishlist = this;
		}
		
		private void detach_WishlistServices(WishlistService entity)
		{
			this.SendPropertyChanging();
			entity.TourWishlist = null;
		}
		
		private void attach_WishlistDepartures(WishlistDeparture entity)
		{
			this.SendPropertyChanging();
			entity.TourWishlist = this;
		}
		
		private void detach_WishlistDepartures(WishlistDeparture entity)
		{
			this.SendPropertyChanging();
			entity.TourWishlist = null;
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.TourWishlist = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.TourWishlist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WishlistDeparture")]
	public partial class WishlistDeparture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _departure_id;
		
		private int _wishlist_id;
		
		private System.DateTime _departure_date;
		
		private decimal _price;
		
		private int _available_slots;
		
		private EntityRef<TourWishlist> _TourWishlist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondeparture_idChanging(int value);
    partial void Ondeparture_idChanged();
    partial void Onwishlist_idChanging(int value);
    partial void Onwishlist_idChanged();
    partial void Ondeparture_dateChanging(System.DateTime value);
    partial void Ondeparture_dateChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void Onavailable_slotsChanging(int value);
    partial void Onavailable_slotsChanged();
    #endregion
		
		public WishlistDeparture()
		{
			this._TourWishlist = default(EntityRef<TourWishlist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int departure_id
		{
			get
			{
				return this._departure_id;
			}
			set
			{
				if ((this._departure_id != value))
				{
					this.Ondeparture_idChanging(value);
					this.SendPropertyChanging();
					this._departure_id = value;
					this.SendPropertyChanged("departure_id");
					this.Ondeparture_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wishlist_id", DbType="Int NOT NULL")]
		public int wishlist_id
		{
			get
			{
				return this._wishlist_id;
			}
			set
			{
				if ((this._wishlist_id != value))
				{
					if (this._TourWishlist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwishlist_idChanging(value);
					this.SendPropertyChanging();
					this._wishlist_id = value;
					this.SendPropertyChanged("wishlist_id");
					this.Onwishlist_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_date", DbType="Date NOT NULL")]
		public System.DateTime departure_date
		{
			get
			{
				return this._departure_date;
			}
			set
			{
				if ((this._departure_date != value))
				{
					this.Ondeparture_dateChanging(value);
					this.SendPropertyChanging();
					this._departure_date = value;
					this.SendPropertyChanged("departure_date");
					this.Ondeparture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available_slots", DbType="Int NOT NULL")]
		public int available_slots
		{
			get
			{
				return this._available_slots;
			}
			set
			{
				if ((this._available_slots != value))
				{
					this.Onavailable_slotsChanging(value);
					this.SendPropertyChanging();
					this._available_slots = value;
					this.SendPropertyChanged("available_slots");
					this.Onavailable_slotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourWishlist_WishlistDeparture", Storage="_TourWishlist", ThisKey="wishlist_id", OtherKey="wishlist_id", IsForeignKey=true)]
		public TourWishlist TourWishlist
		{
			get
			{
				return this._TourWishlist.Entity;
			}
			set
			{
				TourWishlist previousValue = this._TourWishlist.Entity;
				if (((previousValue != value) 
							|| (this._TourWishlist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourWishlist.Entity = null;
						previousValue.WishlistDepartures.Remove(this);
					}
					this._TourWishlist.Entity = value;
					if ((value != null))
					{
						value.WishlistDepartures.Add(this);
						this._wishlist_id = value.wishlist_id;
					}
					else
					{
						this._wishlist_id = default(int);
					}
					this.SendPropertyChanged("TourWishlist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking")]
	public partial class Booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _booking_id;
		
		private int _customer_id;
		
		private System.Nullable<int> _tour_id;
		
		private System.Nullable<int> _combo_id;
		
		private System.Nullable<int> _wishlist_id;
		
		private System.Nullable<int> _staff_id;
		
		private System.Nullable<System.DateTime> _booking_date;
		
		private decimal _total_price;
		
		private int _num_people;
		
		private string _booking_status;
		
		private string _special_requests;
		
		private System.Nullable<System.DateTime> _departure_date;
		
		private System.Nullable<byte> _IsReview;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<Invoice> _Invoices1;
		
		private EntityRef<TourCombo> _TourCombo;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Tour> _Tour;
		
		private EntityRef<TourWishlist> _TourWishlist;
		
		private EntityRef<Tour> _Tour1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbooking_idChanging(int value);
    partial void Onbooking_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Ontour_idChanging(System.Nullable<int> value);
    partial void Ontour_idChanged();
    partial void Oncombo_idChanging(System.Nullable<int> value);
    partial void Oncombo_idChanged();
    partial void Onwishlist_idChanging(System.Nullable<int> value);
    partial void Onwishlist_idChanged();
    partial void Onstaff_idChanging(System.Nullable<int> value);
    partial void Onstaff_idChanged();
    partial void Onbooking_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbooking_dateChanged();
    partial void Ontotal_priceChanging(decimal value);
    partial void Ontotal_priceChanged();
    partial void Onnum_peopleChanging(int value);
    partial void Onnum_peopleChanged();
    partial void Onbooking_statusChanging(string value);
    partial void Onbooking_statusChanged();
    partial void Onspecial_requestsChanging(string value);
    partial void Onspecial_requestsChanged();
    partial void Ondeparture_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondeparture_dateChanged();
    partial void OnIsReviewChanging(System.Nullable<byte> value);
    partial void OnIsReviewChanged();
    #endregion
		
		public Booking()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Invoices1 = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices1), new Action<Invoice>(this.detach_Invoices1));
			this._TourCombo = default(EntityRef<TourCombo>);
			this._Customer = default(EntityRef<Customer>);
			this._Staff = default(EntityRef<Staff>);
			this._Tour = default(EntityRef<Tour>);
			this._TourWishlist = default(EntityRef<TourWishlist>);
			this._Tour1 = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int booking_id
		{
			get
			{
				return this._booking_id;
			}
			set
			{
				if ((this._booking_id != value))
				{
					this.Onbooking_idChanging(value);
					this.SendPropertyChanging();
					this._booking_id = value;
					this.SendPropertyChanged("booking_id");
					this.Onbooking_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_id", DbType="Int")]
		public System.Nullable<int> tour_id
		{
			get
			{
				return this._tour_id;
			}
			set
			{
				if ((this._tour_id != value))
				{
					if ((this._Tour.HasLoadedOrAssignedValue || this._Tour1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontour_idChanging(value);
					this.SendPropertyChanging();
					this._tour_id = value;
					this.SendPropertyChanged("tour_id");
					this.Ontour_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_combo_id", DbType="Int")]
		public System.Nullable<int> combo_id
		{
			get
			{
				return this._combo_id;
			}
			set
			{
				if ((this._combo_id != value))
				{
					if (this._TourCombo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncombo_idChanging(value);
					this.SendPropertyChanging();
					this._combo_id = value;
					this.SendPropertyChanged("combo_id");
					this.Oncombo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wishlist_id", DbType="Int")]
		public System.Nullable<int> wishlist_id
		{
			get
			{
				return this._wishlist_id;
			}
			set
			{
				if ((this._wishlist_id != value))
				{
					if (this._TourWishlist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwishlist_idChanging(value);
					this.SendPropertyChanging();
					this._wishlist_id = value;
					this.SendPropertyChanged("wishlist_id");
					this.Onwishlist_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="Int")]
		public System.Nullable<int> staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_date", DbType="Date")]
		public System.Nullable<System.DateTime> booking_date
		{
			get
			{
				return this._booking_date;
			}
			set
			{
				if ((this._booking_date != value))
				{
					this.Onbooking_dateChanging(value);
					this.SendPropertyChanging();
					this._booking_date = value;
					this.SendPropertyChanged("booking_date");
					this.Onbooking_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_people", DbType="Int NOT NULL")]
		public int num_people
		{
			get
			{
				return this._num_people;
			}
			set
			{
				if ((this._num_people != value))
				{
					this.Onnum_peopleChanging(value);
					this.SendPropertyChanging();
					this._num_people = value;
					this.SendPropertyChanged("num_people");
					this.Onnum_peopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_status", DbType="VarChar(50)")]
		public string booking_status
		{
			get
			{
				return this._booking_status;
			}
			set
			{
				if ((this._booking_status != value))
				{
					this.Onbooking_statusChanging(value);
					this.SendPropertyChanging();
					this._booking_status = value;
					this.SendPropertyChanged("booking_status");
					this.Onbooking_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_special_requests", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string special_requests
		{
			get
			{
				return this._special_requests;
			}
			set
			{
				if ((this._special_requests != value))
				{
					this.Onspecial_requestsChanging(value);
					this.SendPropertyChanging();
					this._special_requests = value;
					this.SendPropertyChanged("special_requests");
					this.Onspecial_requestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_date", DbType="Date")]
		public System.Nullable<System.DateTime> departure_date
		{
			get
			{
				return this._departure_date;
			}
			set
			{
				if ((this._departure_date != value))
				{
					this.Ondeparture_dateChanging(value);
					this.SendPropertyChanging();
					this._departure_date = value;
					this.SendPropertyChanged("departure_date");
					this.Ondeparture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReview", DbType="TinyInt")]
		public System.Nullable<byte> IsReview
		{
			get
			{
				return this._IsReview;
			}
			set
			{
				if ((this._IsReview != value))
				{
					this.OnIsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsReview = value;
					this.SendPropertyChanged("IsReview");
					this.OnIsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Invoice", Storage="_Invoices", ThisKey="booking_id", OtherKey="booking_id")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Invoice1", Storage="_Invoices1", ThisKey="booking_id", OtherKey="booking_id")]
		public EntitySet<Invoice> Invoices1
		{
			get
			{
				return this._Invoices1;
			}
			set
			{
				this._Invoices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_Booking", Storage="_TourCombo", ThisKey="combo_id", OtherKey="combo_id", IsForeignKey=true)]
		public TourCombo TourCombo
		{
			get
			{
				return this._TourCombo.Entity;
			}
			set
			{
				TourCombo previousValue = this._TourCombo.Entity;
				if (((previousValue != value) 
							|| (this._TourCombo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourCombo.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._TourCombo.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._combo_id = value.combo_id;
					}
					else
					{
						this._combo_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("TourCombo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Booking", Storage="_Customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Booking", Storage="_Staff", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._staff_id = value.staff_id;
					}
					else
					{
						this._staff_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Booking", Storage="_Tour", ThisKey="tour_id", OtherKey="tour_id", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._tour_id = value.tour_id;
					}
					else
					{
						this._tour_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourWishlist_Booking", Storage="_TourWishlist", ThisKey="wishlist_id", OtherKey="wishlist_id", IsForeignKey=true)]
		public TourWishlist TourWishlist
		{
			get
			{
				return this._TourWishlist.Entity;
			}
			set
			{
				TourWishlist previousValue = this._TourWishlist.Entity;
				if (((previousValue != value) 
							|| (this._TourWishlist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourWishlist.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._TourWishlist.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._wishlist_id = value.wishlist_id;
					}
					else
					{
						this._wishlist_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("TourWishlist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Booking1", Storage="_Tour1", ThisKey="tour_id", OtherKey="tour_id", IsForeignKey=true)]
		public Tour Tour1
		{
			get
			{
				return this._Tour1.Entity;
			}
			set
			{
				Tour previousValue = this._Tour1.Entity;
				if (((previousValue != value) 
							|| (this._Tour1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour1.Entity = null;
						previousValue.Bookings1.Remove(this);
					}
					this._Tour1.Entity = value;
					if ((value != null))
					{
						value.Bookings1.Add(this);
						this._tour_id = value.tour_id;
					}
					else
					{
						this._tour_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Booking = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Booking = null;
		}
		
		private void attach_Invoices1(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Booking1 = this;
		}
		
		private void detach_Invoices1(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Booking1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour_Review")]
	public partial class Tour_Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _review_id;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<int> _tour_id;
		
		private System.Nullable<int> _combo_id;
		
		private string _review_text;
		
		private System.Nullable<int> _rating;
		
		private System.Nullable<System.DateTime> _review_date;
		
		private EntityRef<TourCombo> _TourCombo;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreview_idChanging(int value);
    partial void Onreview_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void Ontour_idChanging(System.Nullable<int> value);
    partial void Ontour_idChanged();
    partial void Oncombo_idChanging(System.Nullable<int> value);
    partial void Oncombo_idChanged();
    partial void Onreview_textChanging(string value);
    partial void Onreview_textChanged();
    partial void OnratingChanging(System.Nullable<int> value);
    partial void OnratingChanged();
    partial void Onreview_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onreview_dateChanged();
    #endregion
		
		public Tour_Review()
		{
			this._TourCombo = default(EntityRef<TourCombo>);
			this._Customer = default(EntityRef<Customer>);
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int review_id
		{
			get
			{
				return this._review_id;
			}
			set
			{
				if ((this._review_id != value))
				{
					this.Onreview_idChanging(value);
					this.SendPropertyChanging();
					this._review_id = value;
					this.SendPropertyChanged("review_id");
					this.Onreview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_id", DbType="Int")]
		public System.Nullable<int> tour_id
		{
			get
			{
				return this._tour_id;
			}
			set
			{
				if ((this._tour_id != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontour_idChanging(value);
					this.SendPropertyChanging();
					this._tour_id = value;
					this.SendPropertyChanged("tour_id");
					this.Ontour_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_combo_id", DbType="Int")]
		public System.Nullable<int> combo_id
		{
			get
			{
				return this._combo_id;
			}
			set
			{
				if ((this._combo_id != value))
				{
					if (this._TourCombo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncombo_idChanging(value);
					this.SendPropertyChanging();
					this._combo_id = value;
					this.SendPropertyChanged("combo_id");
					this.Oncombo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_text", DbType="NVarChar(500)")]
		public string review_text
		{
			get
			{
				return this._review_text;
			}
			set
			{
				if ((this._review_text != value))
				{
					this.Onreview_textChanging(value);
					this.SendPropertyChanging();
					this._review_text = value;
					this.SendPropertyChanged("review_text");
					this.Onreview_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int")]
		public System.Nullable<int> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> review_date
		{
			get
			{
				return this._review_date;
			}
			set
			{
				if ((this._review_date != value))
				{
					this.Onreview_dateChanging(value);
					this.SendPropertyChanging();
					this._review_date = value;
					this.SendPropertyChanged("review_date");
					this.Onreview_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCombo_Tour_Review", Storage="_TourCombo", ThisKey="combo_id", OtherKey="combo_id", IsForeignKey=true)]
		public TourCombo TourCombo
		{
			get
			{
				return this._TourCombo.Entity;
			}
			set
			{
				TourCombo previousValue = this._TourCombo.Entity;
				if (((previousValue != value) 
							|| (this._TourCombo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourCombo.Entity = null;
						previousValue.Tour_Reviews.Remove(this);
					}
					this._TourCombo.Entity = value;
					if ((value != null))
					{
						value.Tour_Reviews.Add(this);
						this._combo_id = value.combo_id;
					}
					else
					{
						this._combo_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("TourCombo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Tour_Review", Storage="_Customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Tour_Reviews.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Tour_Reviews.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Tour_Review", Storage="_Tour", ThisKey="tour_id", OtherKey="tour_id", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.Tour_Reviews.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.Tour_Reviews.Add(this);
						this._tour_id = value.tour_id;
					}
					else
					{
						this._tour_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
